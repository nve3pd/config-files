[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent><C-e> :NERDTreeToggle<CR> 
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'joshdick/onedark.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = """
  autocmd ColorScheme * highlight Normal ctermbg=none
  autocmd ColorScheme * highlight LineNr ctermbg=none
  set background=dark
  source ~/.config/nvim/toml/plugins/lightline.rc.vim
"""

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'w0rp/ale'
hook_add = """
  let g:ale_sign_error = '⨉'
  let g:ale_sign_warning = '⚠'
  let g:ale_sign_column_always = 1
  let g:ale_linters = {
\   'python': ['flake8'],
\   'typescript': ['tsuquyomi'],
\}
  nmap <silent> <C-k> <Plug>(ale_previous_wrap)  # 前のエラーに
  nmap <silent> <C-j> <Plug>(ale_next_wrap)  # 次のエラーに
"""

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'gosukiwi/vim-atom-dark'

[[plugins]]
repo = "tomasr/molokai"
hook_add = """
  colorscheme molokai
  highlight Normal ctermbg=none
"""

[[plugins]]
repo = 'Shougo/neocomplete.vim'
hook_add = """
let g:neocomplete#force_overwrite_completefunc = 1
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
if !exists('g:neocomplete#force_omni_input_patterns')
  let g:neocomplete#force_omni_input_patterns = {}
endif
let g:neocomplete#force_overwrite_completefunc = 1
let g:neocomplete#force_omni_input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)'
let g:neocomplete#force_omni_input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\|\h\w*::'
"""
